/// <reference types="node" />
import { ReadableStream } from 'node:stream/web';
export declare class StreamFile {
    readonly stream: () => AsyncIterable<Uint8Array>;
    readonly name: string;
    constructor(stream: () => AsyncIterable<Uint8Array>, name: string);
}
export type InputFile = StreamFile;
export declare function itrToStream<T>(iterator: AsyncIterator<T>): ReadableStream<T>;
export declare class SerializationError extends TypeError {
}
/**
 * Calls `JSON.stringify` but removes `null` values from objects before
 * serialization.
 *
 * @throws {SerializationError} when encountering `InputFile`
 */
export declare function str(value: unknown): string;
export declare function createPayload(payload: Record<string, unknown>): {
    method: string;
    headers: {
        'content-type': string;
        connection: string;
    };
    body: string;
} | {
    method: string;
    headers: {
        'content-type': string;
        connection: string;
    };
    body: ReadableStream<Uint8Array>;
};
//# sourceMappingURL=payload.d.ts.map